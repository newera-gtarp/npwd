name: Tagged Release Publisher
on:
  push:
    tags:
      - "*"
jobs:
  create-tagged-release:
    name: Build and Create Tagged Release
    runs-on: ubuntu-latest

    steps:
      - name: Get tag
        run: echo ::set-output name=VERSION_TAG::${GITHUB_REF/refs\/tags\//}
        id: get_tag
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18'
          check-latest: true

      - name: Run build
        run: REACT_APP_VERSION=${{ steps.get_tag.outputs.VERSION_TAG }} yarn build

      - name: Bundle built files
        run: |
          mkdir -p ./temp/npwd/resources
          cp ./{LICENSE,README.md,config.json,import.sql,fxmanifest.lua} ./temp/npwd/
          cp -r ./resources/{dist,html} ./temp/npwd/resources
          # Make sure we copy our one lua boy
          mkdir ./temp/npwd/resources/client
          cp ./resources/client/cl_controls.lua ./temp/npwd/resources/client/cl_controls.lua
          cd ./temp && zip -r ../npwd.zip ./npwd

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        id: auto_release
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: NPWD Release | ${{ steps.get_tag.outputs.VERSION_TAG }}
          prerelease: false
          files: npwd.zip

        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
